# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions
# Consider adding: cache pip,

name: Run CI tests

on:
  push:
    branches: gh-actions-CI
  pull_request:
    branches: gh-actions-CI

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.7', '3.8']
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        sudo apt-get -qq update
        sudo apt-get install -y pandoc  # for markdown notebook cells
        python -m pip install --upgrade pip
        pip install flake8 pytest
        pip install .  # install package with requirements
        pip install -r requirements-dev.txt
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest & nbval
      run: |
        set -e  # exit on error
        pytest --cov=emgfit emgfit/tests/  # Run the tests and check for test coverage.
        python -m ipykernel install --user
        # Test tutorial notebook execution:
        pytest --cov=emgfit --cov-append --timeout=300 --nbval-lax --current-env ./emgfit/examples/tutorial/emgfit_tutorial.ipynb
        pytest --cov-report term-missing --cov-report=xml --cov=emgfit # Print & save test coverage report.
    - name: Archive code coverage results
      uses: actions/upload-artifact@v2
      with:
        name: code-coverage-report
        path: coverage.xml
  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Download a single artifact
      uses: actions/download-artifact@v2
      with:
        name: code-coverage-report
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        fail_ci_if_error: false
        verbose: true
