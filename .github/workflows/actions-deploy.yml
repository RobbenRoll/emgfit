# Publish docs to gh-pages and release package on PyPi

name: Deploy docs and package

on:
  push:
    tags:
    - '*'

jobs:
  deploy:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'
    - name: Install dependencies
      run: |
        sudo apt-get -qq update
        sudo apt-get install -y pandoc # for markdown notebook cells
        python -m  pip install --upgrade pip
        pip install flake8 pytest
        pip install .   # install package with requirements
        pip install -r requirements-dev.txt
        pip install setuptools wheel twine
        python -m ipykernel install --user --name python3
    - name: Build sphinx documentation
      run: |
        sudo rm -f ./docs/source/outputs/*.xlsx
        sudo rm -f ./docs/source/outputs/*peakshape_calib.txt
        make -C docs clean   # clear build directory
        set -e   # exit if building docs fails
        make -C docs html
    - name: Get tag
      id: tag
      uses: dawidd6/action-get-tag@v1
    # This step will retry until required check passes
    # and will fail the whole workflow if the check conclusion is not a success
    - name: Wait on tests
      uses: lewagon/wait-on-check-action@v0.1
      with:
        ref: gh-actions-CI # can be commit SHA or tag too  #TODO change to master
        check-name: "Run CI tests" # name of the existing check - omit to wait for all checks
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        wait-interval: 20 # seconds
    - name: Publish docs to gh-pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./docs/build/html
        destination_dir: ${{steps.tag.outputs.tag}}
    - name: Update gh-pages index
      run: |
        git config user.name github-actions
        git config user.email github-actions@github.com
        git fetch origin
        git pull checkout gh-pages
        ./make-index.sh
        git add -f .
        git commit --allow-empty -m "Update gh-pages index with new tagged version."
        git push -fq origin gh-pages
      shell: bash

    - name: Publish package to PyPI-test
      uses: actions/checkout@master
    - name: Install pypa/build
      run: |
        python -m pip install build --user
    - name: Build a binary wheel and a source tarball
      run: |
        python -m build --sdist --wheel --outdir dist/
    - name: Publish package to Test PyPI
      uses: pypa/gh-action-pypi-publish@master
      with:
        password: ${{ secrets.test_pypi_password }}
        repository_url: https://test.pypi.org/legacy/
    # - name: Publish package to PyPI
    #   if: startsWith(github.ref, 'refs/tags')
    #   uses: pypa/gh-action-pypi-publish@master
    #   with:
    #     password: ${{ secrets.pypi_password }}

    # - name: Build and publish package
    #   env:
    #     TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
    #     TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
    #   run: |
    #     python setup.py sdist bdist_wheel
    #     twine upload dist/*
