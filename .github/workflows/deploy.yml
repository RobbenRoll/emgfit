# Publish docs to gh-pages and release package on PyPi

name: CI tests & deployment

on:
  push:
    tags:
    - '*'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        sudo apt-get -qq update
        sudo apt-get install -y pandoc  # for markdown notebook cells
        python -m pip install --upgrade pip
        pip install flake8 pytest
        pip install .  # install package with requirements
        pip install -r requirements-dev.txt
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest & nbval
      run: |
        set -e  # exit on error
        python -m ipykernel install --user --name python3
         # Run tests and save coverage:
        pytest --cov=emgfit --cov-report term-missing emgfit/tests/
        # Test tutorial notebook execution and save coverage:
        pytest --cov=emgfit --cov-append --cov-report term-missing --timeout=300 --nbval-lax --current-env ./emgfit/examples/tutorial/emgfit_tutorial.ipynb
        # Upload code coverage report to Codecov
        codecov
  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'
    - name: Install dependencies
      run: |
        sudo apt-get -qq update
        sudo apt-get install -y pandoc # for markdown notebook cells
        python -m  pip install --upgrade pip
        pip install flake8 pytest
        pip install .   # install package with requirements
        pip install -r requirements-dev.txt
        pip install setuptools wheel twine
        python -m ipykernel install --user --name python3
    - name: Build sphinx documentation
      run: |
        sudo rm -f ./docs/source/outputs/*.xlsx
        sudo rm -f ./docs/source/outputs/*peakshape_calib.txt
        make -C docs clean   # clear build directory
        set -e   # exit if building docs fails
        make -C docs html
    - name: Get tag
      id: tag
      uses: dawidd6/action-get-tag@v1
    - name: Publish docs to gh-pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./docs/build/html
        destination_dir: ${{steps.tag.outputs.tag}}
    - name: Update gh-pages index
      run: |
        rm -r docs
        git config user.name github-actions
        git config user.email github-actions@github.com
        git fetch origin
        git checkout gh-pages
        chmod +x make-index.sh
        ./make-index.sh
        git add -f .
        git commit --allow-empty -m "Update gh-pages index with new tagged version."
        git push -fq origin gh-pages
      shell: bash

    - uses: actions/checkout@master
    - name: Install pypa/build
      run: |
        python -m pip install build --user
    - name: Build a binary wheel and a source tarball
      run: |
        python -m build --sdist --wheel --outdir dist/
    - name: Publish package to TestPyPI
      uses: pypa/gh-action-pypi-publish@master
      with:
        password: ${{ secrets.test_pypi_password }}
        repository_url: https://test.pypi.org/legacy/
    - name: Publish package to PyPI
      if: startsWith(github.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@master
      with:
        password: ${{ secrets.pypi_password }}
